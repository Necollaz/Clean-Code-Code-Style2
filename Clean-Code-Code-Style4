namespace IMJunior
{
    public class Program
    {
        static void Main(string[] args)
        {
            List<IPaymentFactory> factories = new List<IPaymentFactory>
            {
                new QiwiFactory(),
                new WebMoneyFactory(),
                new CardFactory()
            };

            ApplicationContext applicationContext = new ApplicationContext(factories);
            OrderForm orderForm = new OrderForm(applicationContext);

            var systemId = orderForm.ShowForm();
            var factory = applicationContext.Factories.FirstOrDefault(factory => factory.Name.Equals(systemId, StringComparison.OrdinalIgnoreCase));
            if(factory != null)
            {
                PaymentHandler paymentHandler = new PaymentHandler(factory);
                paymentHandler.ProcessPayment();
                paymentHandler.ShowResult();
            }
            else
            {
                Console.WriteLine($"Платёжная система {systemId} не поддерживается.");
            }
        }
    }

    public interface IPaymentSystem
    {
        public void Check();
        public void Processing();
    }

    public class QIWI : IPaymentSystem
    {
        public void Check()
        {
            Console.WriteLine("Перевод на страницу QIWI...");
        }

        public void Processing()
        {
            Console.WriteLine("Проверка платежа через QIWI...");
        }
    }

    public class WebMoney : IPaymentSystem
    {
        public void Check()
        {
            Console.WriteLine("Вызов API WebMoney...");
        }

        public void Processing()
        {
            Console.WriteLine("Проверка платежа через WebMoney...");
        }
    }

    public class Card : IPaymentSystem
    {
        public void Check()
        {
            Console.WriteLine("Вызов API банка эмитера карты Card...");
        }

        public void Processing()
        {
            Console.WriteLine("Проверка платежа через Card...");
        }
    }

    public interface IPaymentFactory
    {
        public string Name { get; }
        public IPaymentSystem Create();
    }

    public class QiwiFactory : IPaymentFactory
    {
        public string Name => "QIWI";
        public IPaymentSystem Create() => new QIWI();
    }

    public class WebMoneyFactory : IPaymentFactory
    {
        public string Name => "WebMoney";
        public IPaymentSystem Create() => new WebMoney();
    }

    public class CardFactory : IPaymentFactory
    {
        public string Name => "Card";
        public IPaymentSystem Create() => new Card();
    }

    public class ApplicationContext
    {
        public ApplicationContext(IEnumerable<IPaymentFactory> factories)
        {
            Factories = factories ?? throw new ArgumentNullException(nameof(factories));
        }

        public IEnumerable<IPaymentFactory> Factories { get; }
    }

    public class OrderForm
    {
        private readonly ApplicationContext _context;
        private readonly string _availableSystems;

        public OrderForm(ApplicationContext context)
        {
            _context = context ?? throw new ArgumentNullException(nameof(context));
            _availableSystems = string.Join(", ", _context.Factories.Select(factory => factory.Name));
        }

        public string ShowForm()
        {
            Console.WriteLine($"Мы принимаем: {_availableSystems}");
            Console.WriteLine("Какое системой вы хотите совершить оплату?");

            return Console.ReadLine();
        }
    }

    public class PaymentHandler
    {
        private readonly IPaymentSystem _system;

        public PaymentHandler(IPaymentFactory factory)
        {
            _system = factory?.Create() ?? throw new ArgumentNullException(nameof(factory));
        }

        public void ProcessPayment()
        {
            _system.Processing();
        }

        public void ShowResult()
        {
            Console.WriteLine($"Вы оплатили с помощью {_system.GetType().Name}");
            _system.Check();
            Console.WriteLine("Оплата прошла успешно!");
        }
    }
}
